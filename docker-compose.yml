version: '2'

services:
  nginx:
    build: ./nginx
    container_name: ${PROJECT_NAME}-nginx
    ports:
      - "8000:80"
    volumes:
      - ./magento2:/home/magento:cached
    depends_on:
      - mysql
      - redis
      - php-fpm
    networks:
      - magento

  php-fpm:
    platform: linux/x86_64
    build: ./php-fpm
    container_name: ${PROJECT_NAME}-php-fpm
    volumes:
      - ./magento2:/home/magento:cached
      - ./php-fpm/php.ini:/etc/php.ini
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - elasticsearch
    networks:
      - magento

  redis:
    image: redis:6.2
    container_name: ${PROJECT_NAME}-redis
    ports:
      - "6379:6379"
    networks:
      - magento

  mysql:
    platform: linux/x86_64
    image: mysql:8.0.27
    container_name: ${PROJECT_NAME}-mysql
    volumes:
      - ./mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
    environment:
      MYSQL_DATABASE: 'magento_db'
      MYSQL_ROOT_PASSWORD: 'root_pass'
      MYSQL_USER: 'magento_user'
      MYSQL_PASSWORD: 'PASSWD#'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'false'
    ports:
      - "3308:3306"
    networks:
      - magento

  mailhog:
    platform: linux/x86_64
    image: mailhog/mailhog
    container_name: ${PROJECT_NAME}-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - magento

  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: ${PROJECT_NAME}-rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always
    networks:
      - magento

  elasticsearch:
    image: elasticsearch:7.16.3
    container_name: ${PROJECT_NAME}-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: always
    networks:
      - magento
    environment:
      - "discovery.type=single-node"
      ## Set custom heap size to avoid memory errors
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"

networks:
  magento:
    driver: bridge